#summary A propos de FontStream

Librarie AS3 permettant de charger progressivement des polices dans Flash. Evitant ainsi le chargement excessif que donne les polices Unicodes, embarquant souvent plus de 10000 caractères.

Utilisation :

{{{
function fontLoader_eventListener(event:Event):void
{
	trace(event is ErrorEvent ? ("Font load complete but with some errors: " + event.text) : "Font load complete without errors.");
	enumerateFonts();
}

function enumerateFonts():void
{
	var output:String = "enumerateFonts:";
	var fonts:Array = Font.enumerateFonts(false);
	for each(var font:Font in fonts)
		output += "\n\tfont class:" + getQualifiedClassName(font) + " super:" + getQualifiedSuperclassName(font) + " fontName:" + font.fontName + " fontStyle:" + font.fontStyle + " hasGlyphs(\"e\"):" + font.hasGlyphs("e") + " hasGlyphs(\"E\"):" + font.hasGlyphs("E");
	trace(output);
}

enumerateFonts();

//Make a FontLoader instance for each loads
var fontLoader:FontLoader = new FontLoader();
fontLoader.addEventListener(Event.COMPLETE, fontLoader_eventListener);
fontLoader.addEventListener(ErrorEvent.ERROR, fontLoader_eventListener);
fontLoader.addEventListener(IOErrorEvent.IO_ERROR, fontLoader_eventListener);
fontLoader.load(new FontChunksRequest("Arial Unicode MS", FontStyle.REGULAR, "some text with 'e' letter but without the 'e' cap. version"));

/*
So time later in the same script, after few frames or after any event (text data load complete, font load error/complete, textfield change event, click, etc.)
*/

var fontLoader:FontLoader = new FontLoader();
//... call enumerateFonts() after complete event
fontLoader.load(new FontChunksRequest("Arial Unicode MS", FontStyle.REGULAR, "SOME TEXT"));
}}}